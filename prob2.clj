;; Each new term in the Fibonacci sequence is generated by adding the
;; previous two terms. By starting with 1 and 2, the first 10 terms will
;; be:
;;
;; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;;
;; By considering the terms in the Fibonacci sequence whose values do not
;; exceed four million, find the sum of the even-valued terms.

(defn fib []
  ;; generate lazy fibonacci number
  (let [lazy-fib (fn lazy-fib [a b]
                   (cons a (lazy-seq (lazy-fib b (+' b a)))))]
    (lazy-fib 1 2)))

(defn prob2 []
  (loop [even-fib-seq (filter even? (fib))
         sum 0]
    (let [fib-num (first even-fib-seq)]
      (if (> fib-num 4000000)
        sum
        (recur (next even-fib-seq) (+ sum fib-num))))))
